<?xml version="1.0" encoding="UTF-8"?>
<project name="L2J_CommunityServer" default="dist" basedir=".">
	<property name="src" location="java" />
	<property name="lib" location="lib" />
	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />
	<property name="build.dist" location="${build}/dist" />
	<property name="build.dist.community" location="${build.dist}/community" />
	<property name="build.dist.doc" location="${build.dist}/doc" />
	<property name="build.dist.libs" location="${build.dist}/libs" />
	
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="checkAntVersion" description="Check if Ant 1.8.2 is present">
		<fail message="Ant 1.8.2 is required. But your version is ${ant.version}">
			<condition>
				<not>
					<contains string="${ant.version}" substring="1.8.2"/>
				</not>
			</condition>
		</fail>
	</target>

	<target name="checkJavaVersion" description="Checks if Java JDK 7 is present">
		<available classname="java.lang.AutoCloseable" property="JDK7.present" />
		<fail unless="JDK7.present" message="Java JDK 7 is required." />
	</target>

	<target name="init" depends="clean, checkAntVersion, checkJavaVersion" description="Create the output directories.">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
	</target>

	<target name="compile" depends="init" description="Compile the source.">
		<javac destdir="${build.classes}" compiler="javac1.7" debug="true" debuglevel="lines,vars,source" includeantruntime="false" source="1.7" target="1.7">
			<src path="${src}" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="jar" depends="compile">
		<jar destfile="${build.dist.community}/l2jcommunity.jar">
			<fileset dir="${build.classes}" />
		</jar>
	</target>

	<target name="dist" depends="jar">
		<copy todir="${build.dist.community}">
			<fileset dir="dist">
				<include name="startCommunityServer.*" />
			</fileset>
			<fileset dir="${src}">
				<include name="log.cfg" />
				<include name="console.cfg" />
			</fileset>
		</copy>
		<copy todir="${build.dist.community}/config">
			<fileset dir="${src}/config">
				<include name="*.properties" />
			</fileset>
		</copy>
		<copy todir="${build.dist.doc}">
			<fileset dir="${basedir}">
				<include name="changes.txt" />
				<include name="LICENSE.txt" />
				<include name="README.txt" />
			</fileset>
			<fileset dir="${src}/../lib">
				<include name="*LICENSE*" />
			</fileset>
		</copy>
		<copy todir="${build.dist.libs}">
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
		</copy>
		<fixcrlf srcdir="${build.dist.community}" eol="crlf" eof="remove" includes="**/*.bat" />
		<fixcrlf srcdir="${build.dist.community}" eol="lf" eof="remove" includes="**/*.sh" />
		<zip destfile="${build}/L2J_CommunityServer.zip" basedir="${build.dist}" />
	</target>

	<target name="clean">
		<delete dir="${build}" />
	</target>
</project>